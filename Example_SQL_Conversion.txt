
----------------Login Page----------------------------
SEQUELIZE (FindOne):

Login Page

app.post("/login", (req, res) => {
  console.log(req.body);
  db.User.findOne({
    where: {username: req.body.username},
  }).then(function (user) {
    if (user) {
      const response = user.validPassword(req.body.password);
      if (response) {
        res.json(user);
        console.log(user);
      } else {
        res.send({ message: "Wrong username/password combination!" });
      }
    } else {
      res.send({ message: "User doesn't exist" });
    }
    console.log(user);
  });
});

======================
SQL (Select * WHERE)
//Login Page
  app.post("/login", (req, res) => {
    console.log(req.body);
    let query = `SELECT * from users where username = '${req.body.username}' AND password = '${req.body.password}' `;

    amtil_backend.query(query, (err, response) => {
      if (err) throw err;
      if (response && response.length > 0) {
        console.table(response);
        res.json(response);
      } else {
        res.send({ message: "Wrong username/password combination!" });
      }
    });
  });

----------------Registration Page----------------------------

SEQUELIZE (.Create):
Registration Page: Inserts New User into users table 
app.post("/register", (req, res) => {
  console.log(req.body);
  db.User.create({
    username: req.body.username,
    password: req.body.password,
    fName: req.body.fName,
    lName: req.body.lName,
    title: req.body.title,
    email: req.body.email,
  }).then(function (users) {
    // console.log(users);
    res.json(users);
    
  });
});

===============

SQL (INSERT INTO)
//Registration Page: Inserts New User into users table with checks for existing username and password
  
app.post("/register", (req, res) => {
    let query = `SELECT username from users WHERE username = '${req.body.username}' `;
    amtil_backend.query(query, (err, response) => {
      if (err) throw err;
      console.log(response);
      if (response && response.length > 0) {
        res.send({
          errorCode: 4000,
          message: "Username is taken. Please enter new username.",
        });
      } else {
        query = `INSERT INTO users (username, password, fName, lName, title, email)
        VALUES ('${req.body.username}', '${req.body.password}', '${req.body.fName}', '${req.body.lName}', '${req.body.title}', '${req.body.email}')`;
        console.log(query);
        amtil_backend.query(query, (err, resp) => {
          if (err) {
            // throw err;
            res.send({ errorCode: 4000, message: err.message });
          }
          console.log(resp);

          res.send({ errorCode: 2000, message: "User added!" });
        });
      }
    });
  });
};
